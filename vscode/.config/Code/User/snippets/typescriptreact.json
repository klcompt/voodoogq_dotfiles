{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Test Boiler": {
		"prefix": "reacttest",
		"body": [
			"import React from \"react\"",
			"import { mount } from \"enzyme\"",
			"import { findByTestAttr as find, EnzymeWrapper } from 'src/test/utils'",
			"import $1 from \"$2\"",
			"",
			"let wrapped: EnzymeWrapper",
			"",
			"beforeEach(() => {",
			"  wrapped = mount($3)",
			"});",
			"",
			"it(\"$4\", () => {",
			"  expect(find(wrapped, \"$5\", \"$6\").length).toBe(1)",
			"})"
		]
	},
	"Functional Component": {
		"prefix": "fc",
		"body": [
			"import React from \"react\"",
			"",
			"interface Props {}",
			"",
			"const $1: React.FC<Props> = (): JSX.Element => {",
			"  return (<div>$2</div>)",
			"}",
			"",
			"export default $1"
		]
	},
	"Find By Test Attribute": {
		"prefix": "fbta",
		"body": [
			"find(wrapped, \"$1\", \"$2\")"
		]
	},
	"Test": {
		"prefix": "itis",
		"body": [
			"it(\"$1\", () => {",
			"  $2",
			"})"
		]
	},
	"Describe": {
		"prefix": "desc",
		"body": [
			"describe(\"$1\", () => {",
			"  $2",
			"})"
		]
	},
}
